{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/fs_part_8/library-frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { EDIT_AUTHOR, ALL_AUTHORS } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [name, setName] = useState(props.authors[0].name);\n  const [born, setBorn] = useState('');\n  const [editAuthor] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  const authors = [...props.authors];\n\n  const submit = async event => {\n    event.preventDefault();\n    const bornInt = Number(born);\n    editAuthor({\n      variables: {\n        name,\n        born: bornInt\n      }\n    });\n    setName('');\n    setBorn('');\n  };\n\n  if (!props.token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"born\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), authors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.born\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.bookCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, a.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), authors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.born\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.bookCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, a.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"name\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setName(target.value);\n            },\n            children: authors.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: a.name,\n              children: a.name\n            }, a.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"born\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: born,\n            type: \"number\",\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setBorn(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"update author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authors, \"fV/RNPcC7sl2Es/cnx11Zcs8elc=\", false, function () {\n  return [useMutation];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/home/ytuukka/fs_part_8/library-frontend/src/components/Authors.js"],"names":["useState","useMutation","EDIT_AUTHOR","ALL_AUTHORS","Authors","props","name","setName","authors","born","setBorn","editAuthor","refetchQueries","query","show","submit","event","preventDefault","bornInt","Number","variables","token","map","a","bookCount","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { EDIT_AUTHOR, ALL_AUTHORS } from '../queries'\n\nconst Authors = (props) => {\n  const [name, setName] = useState(props.authors[0].name)\n  const [born, setBorn] = useState('')\n  const [editAuthor] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{ query: ALL_AUTHORS }],\n  })\n\n  if (!props.show) {\n    return null\n  }\n  const authors = [...props.authors]\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    const bornInt = Number(born)\n\n    editAuthor({\n      variables: { name, born: bornInt },\n    })\n\n    setName('')\n    setBorn('')\n  }\n\n  if (!props.token) {\n    return (\n      <div>\n        <h2>authors</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>born</th>\n              <th>books</th>\n            </tr>\n            {authors.map((a) => (\n              <tr key={a.name}>\n                <td>{a.name}</td>\n                <td>{a.born}</td>\n                <td>{a.bookCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>born</th>\n            <th>books</th>\n          </tr>\n          {authors.map((a) => (\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <h2>Set birthyear</h2>\n        <form onSubmit={submit}>\n          <div>\n            name\n            <select onChange={({ target }) => setName(target.value)}>\n              {authors.map((a) => (\n                <option key={a.name} value={a.name}>\n                  {a.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            born\n            <input\n              value={born}\n              type=\"number\"\n              onChange={({ target }) => setBorn(target.value)}\n            />\n          </div>\n          <button type=\"submit\">update author</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Authors\n"]},"metadata":{},"sourceType":"module"}