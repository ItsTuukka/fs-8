{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/fs_part_8/library-frontend/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  _s();\n\n  let {\n    setError,\n    setToken,\n    show\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [login, result] = useMutation(LOGIN, {\n    onError: error => {\n      setError(error.graphQLErrors[0].message);\n    }\n  });\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value;\n      setToken(token);\n      localStorage.setItem('user-token', token);\n    }\n  }, [result.data]);\n\n  const submit = async event => {\n    event.preventDefault();\n    login({\n      variables: {\n        username,\n        password\n      }\n    });\n  };\n\n  if (!show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setUsername(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"1Du/srgAOAZd0AOcPvpT0UU89o0=\", false, function () {\n  return [useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ytuukka/fs_part_8/library-frontend/src/components/LoginForm.js"],"names":["React","useState","useEffect","useMutation","LOGIN","LoginForm","setError","setToken","show","username","setUsername","password","setPassword","login","result","onError","error","graphQLErrors","message","data","token","value","localStorage","setItem","submit","event","preventDefault","variables","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAAiC;AAClD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACY,KAAD,EAAQC,MAAR,IAAkBX,WAAW,CAACC,KAAD,EAAQ;AACzCW,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAClBV,MAAAA,QAAQ,CAACU,KAAK,CAACC,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAR;AACD;AAHwC,GAAR,CAAnC;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,MAAM,CAACK,IAAX,EAAiB;AACf,YAAMC,KAAK,GAAGN,MAAM,CAACK,IAAP,CAAYN,KAAZ,CAAkBQ,KAAhC;AACAd,MAAAA,QAAQ,CAACa,KAAD,CAAR;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,KAAnC;AACD;AACF,GANQ,EAMN,CAACN,MAAM,CAACK,IAAR,CANM,CAAT;;AAQA,QAAMK,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEAb,IAAAA,KAAK,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAElB,QAAAA,QAAF;AAAYE,QAAAA;AAAZ;AAAb,KAAD,CAAL;AACD,GAJD;;AAKA,MAAI,CAACH,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEgB,MAAhB;AAAA,8BACE;AAAA,+BACW,GADX,eAEE;AACE,UAAA,KAAK,EAAEf,QADT;AAEE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEmB,cAAAA;AAAF,aAAD;AAAA,mBAAgBlB,WAAW,CAACkB,MAAM,CAACP,KAAR,CAA3B;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,+BACW,GADX,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEV,QAFT;AAGE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEiB,cAAAA;AAAF,aAAD;AAAA,mBAAgBhB,WAAW,CAACgB,MAAM,CAACP,KAAR,CAA3B;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjDD;;GAAMhB,S;UAIoBF,W;;;KAJpBE,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { LOGIN } from '../queries'\n\nconst LoginForm = ({ setError, setToken, show }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [login, result] = useMutation(LOGIN, {\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message)\n    },\n  })\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value\n      setToken(token)\n      localStorage.setItem('user-token', token)\n    }\n  }, [result.data])\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    login({ variables: { username, password } })\n  }\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          username{' '}\n          <input\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password{' '}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}