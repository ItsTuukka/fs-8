{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/fs_part_8/library-frontend/src/components/NewBook.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { CREATE_BOOK, ALL_BOOKS } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewBook = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [createBook] = useMutation(CREATE_BOOK, {\n    refetchQueries: [{\n      query: ALL_BOOKS\n    }]\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    const pubInt = Number(published);\n    props.createBook({\n      variables: {\n        title,\n        author,\n        published: pubInt,\n        genres\n      }\n    });\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setAuthor(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setPublished(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setGenre(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"bqRdS2Uel8kDMCnAzrnNg6q9jtg=\", true);\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"sources":["/home/ytuukka/fs_part_8/library-frontend/src/components/NewBook.js"],"names":["useState","CREATE_BOOK","ALL_BOOKS","NewBook","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","createBook","useMutation","refetchQueries","query","show","submit","event","preventDefault","pubInt","Number","variables","addGenre","concat","target","value","join"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nimport { CREATE_BOOK, ALL_BOOKS } from '../queries'\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  const [createBook] = useMutation(CREATE_BOOK, {\n    refetchQueries: [{ query: ALL_BOOKS }],\n  })\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    const pubInt = Number(published)\n\n    props.createBook({\n      variables: { title, author, published: pubInt, genres },\n    })\n\n    setTitle('')\n    setPublished('')\n    setAuthor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type=\"number\"\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">\n            add genre\n          </button>\n        </div>\n        <div>genres: {genres.join(' ')}</div>\n        <button type=\"submit\">create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook\n"]},"metadata":{},"sourceType":"module"}