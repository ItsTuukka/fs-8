{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/fs_part_8/library-frontend/src/components/Recommend.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS, ME } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommend = _ref => {\n  _s();\n\n  let {\n    show\n  } = _ref;\n  const books = useQuery(ALL_BOOKS);\n  const user = useQuery(ME);\n\n  if (!show) {\n    return null;\n  }\n\n  if (books.loading || user.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  const genre = user.data.me;\n  console.log(genre);\n  const filteredBooks = books.data.allBooks.filter(book => book.genres.includes(genre));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"books in your favourite genre \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), filteredBooks.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recommend, \"vhVaHNdDSpTGkFx1SGqbzJx8Xg4=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Recommend;\nexport default Recommend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"sources":["/home/ytuukka/fs_part_8/library-frontend/src/components/Recommend.js"],"names":["useQuery","ALL_BOOKS","ME","Recommend","show","books","user","loading","genre","data","me","console","log","filteredBooks","allBooks","filter","book","genres","includes","map","a","title","author","name","published"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,EAApB,QAA8B,YAA9B;;;AAEA,MAAMC,SAAS,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9B,QAAMC,KAAK,GAAGL,QAAQ,CAACC,SAAD,CAAtB;AACA,QAAMK,IAAI,GAAGN,QAAQ,CAACE,EAAD,CAArB;;AAEA,MAAI,CAACE,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,CAACE,OAAN,IAAiBD,IAAI,CAACC,OAA1B,EAAmC;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,CAAUC,EAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAMK,aAAa,GAAGR,KAAK,CAACI,IAAN,CAAWK,QAAX,CAAoBC,MAApB,CAA4BC,IAAD,IAC/CA,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqBV,KAArB,CADoB,CAAtB;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gEACgC;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGK,aAAa,CAACM,GAAd,CAAmBC,CAAD,iBACjB;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASJ,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5CD;;GAAMlB,S;UACUH,Q,EACDA,Q;;;KAFTG,S;AA8CN,eAAeA,SAAf","sourcesContent":["import { useQuery } from '@apollo/client'\nimport { ALL_BOOKS, ME } from '../queries'\n\nconst Recommend = ({ show }) => {\n  const books = useQuery(ALL_BOOKS)\n  const user = useQuery(ME)\n\n  if (!show) {\n    return null\n  }\n\n  if (books.loading || user.loading) {\n    return <div>loading...</div>\n  }\n\n  const genre = user.data.me\n  console.log(genre)\n  const filteredBooks = books.data.allBooks.filter((book) =>\n    book.genres.includes(genre)\n  )\n\n  return (\n    <div>\n      <h2>recommendations</h2>\n\n      <div>\n        books in your favourite genre <b>{genre}</b>\n      </div>\n\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>author</th>\n            <th>published</th>\n          </tr>\n          {filteredBooks.map((a) => (\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Recommend\n"]},"metadata":{},"sourceType":"module"}